#### demo_cog_pump <- sire

:| sire

= (**DB_READ query) [1 query]
= (**DB_WRITE cmd)  [2 cmd]

= (readsFun state _ _)
^ trk [readRes=_ =state] _
| len state

= (step state reads workers inputs)
^ (step _ reads workers, [])
^ trk [newState=_ =inputs] _
^ weld _ state
| cat | map snd inputs

= (pump i _ reqId input)
| trk [pump=i =reqId =input]
| pump i
++ ((inc reqId), (DB_WRITE | rep input inc-i))
++ ((add 2 reqId), (DB_READ %readValue))

= main
| step [] readsFun
: i < gen 10
| pump i []

; TODO how do we kick off the loop? start with cog or pumps?
; ANSWER normally hardware kicks it off so we have to inject stuff into the pumps in the runtime
