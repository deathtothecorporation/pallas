#### demo_pump_wait <- prelude

:| prelude

;; Main IO loop
= (waitWriteLoop return)
: now < syscall TIME_WHEN
| trk %proc_got_now
: state < syscall | DB_READ ()
| trk [current_state=state]
: result < tag_syscall | DB_WRITE now
| trk [%proc_wrote [=result]]
: _ < syscall | TIME_WAIT (add 2 now)
| trk %proc_waited
| waitWriteLoop return

;; Handle write requests from the IO loop proc
= (writeInput input return)
: st < state
| trk [=st]
| if (gte len-st 5)
  | trk {state reached 5 entries, pruning}
  : _ < write [input]
  | return 1
: _ < alter (flip rowSnoc input)
| return (inc len-st)

;; Start everything
= (cog return)
: _ < work (EXEC waitWriteLoop) writeInput ; Start a worker and its handler.
| return ()

startState=[]

(read state reqId query)=state

main=(runCog startState read cog)
