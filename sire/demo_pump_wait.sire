#### demo_pump_wait <- new_kern

:| new_kern

;; Main IO loop
= (waitWriteLoop return)
: now < syscall TIME_WHEN
| trk %proc_got_now
: state < syscall | DB_READ ()
| trk [current_state=state]
| void | syscall | DB_WRITE now
: _ < syscall | TIME_WAIT (add 2 now)
| trk %proc_waited
| waitWriteLoop return

;; Handle write requests from the IO loop proc
= (writeInput input return)
: st < state
| if (gte len-st 5)
  | trk {state reached 5 entries, pruning}
  | write [input] return
| alter (flip rowSnoc input) return

;; Start everything
= cog
: input return < work (EXEC waitWriteLoop) ; writeInput ; Start a worker and its handler.
: st < state
| trk [=st]
| if (gte len-st 5)
  | trk {state reached 5 entries, pruning}
  | write [input] return
| alter (flip rowSnoc input) return


startState=[]

(read state reqId query)=state

main=(runCog cog startState read)
