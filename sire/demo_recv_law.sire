; Copyright 2024 Jack Ek
; Use of this source code is governed by a BSD-style license that can be
; found in the LICENSE file.

#### demo_recv_law <- demo_send_law

:| prelude
:| kern
:| net_machine
:| demo_send_law [lawHashes]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

pubCogPort=55985 ;; EDIT ME!

= (askerCog name onExit tid pubCogId return)
@ req | NET_ASK pubCogId %agora name
: mybLaw < syscall req
# datacase mybLaw
* NONE
  : () < onExit | traceId (%crash, tid, NONE)
  | return ()
* SOME|law
  : _ < onExit (%ok, tid, law-tid)
  | return ()

= (askDemo return)
@ pubCogId | barWeld b#{http://localhost:} | natBar | showNat pubCogPort
: a < newEmptyMVar
: b < newEmptyMVar
: c < newEmptyMVar
: d < newEmptyMVar
: _ < fork (askerCog (idx 0 lawHashes) (putMVar a) 7 pubCogId)
: _ < fork (askerCog (idx 1 lawHashes) (putMVar b) 2 pubCogId)
: _ < fork (askerCog (idx 2 lawHashes) (putMVar c) 3 pubCogId)
: _ < fork (askerCog (idx 3 lawHashes) (putMVar d) 4 pubCogId)
: ar@(aOk, _, aRes) < takeMVar a
: br@(bOk, _, bRes) < takeMVar b
: cr@(cOk, _, cRes) < takeMVar c
: dr@(dOk, _, dRes) < takeMVar d
;
| trk [b#{Asking for law hashes ⤵ } lawHashes b#{from ⤵ } pubCogId]
| trk b#{Evaluating laws...}
| trk [b#{RESULTS ⤵ }]
| trk [%law1 b#{Our threadId: 1} b#{A simple string. Result ⤵ } dRes]
| trk [%law2 b#{Our threadId: 2} b#{Adding threadId + 10. Result ⤵ } bRes]
| trk [%law3 b#{Our threadId: 3} b#{Multiplying threadId * 10. Result ⤵ } cRes]
| trk [%law4 b#{Our threadId: 7} b#{Range creation (7 items). Result ⤵ } aRes]
| return ()

main=(runCog askDemo)
